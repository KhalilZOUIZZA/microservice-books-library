server.port=${REFERENTIAL_BACK_PORT:8036}

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=${REFERENTIAL_DB_URL:jdbc:mysql://localhost:3306/library?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC}
spring.main.allow-bean-definition-overriding=true
spring.application.name=books-service


spring.datasource.username=${REFERENTIAL_DB_USER:root}
spring.datasource.password=${REFERENTIAL_DB_PASSWORD:}

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy



## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=250000MB
# Max Request Size
spring.servlet.multipart.max-request-size=100000MB


management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true


# Eureka Server URL
eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/

# Register the client with Eureka
eureka.client.register-with-eureka=true

# Enable fetching registry from Eureka
eureka.client.fetch-registry=true

# Instance-specific settings
eureka.instance.hostname=books-service
eureka.instance.prefer-ip-address=true